Grammar

    0 $accept: function $end

    1 function: function_header variables body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 parameters: parameter optional_parameter
    5           | ε

    6 optional_parameter: optional_parameter optional_parameters
    7                   | ε

    8 optional_parameters: ',' parameter

    9 parameter: IDENTIFIER ':' type

   10 type: INTEGER
   11     | REAL
   12     | CHARACTER

   13 variables: variables variable
   14          | error ';'
   15          | ε

   16 variable: IDENTIFIER ':' type IS statement
   17         | IDENTIFIER ':' LIST OF type IS list ';'

   18 list: '(' expression lists ')'

   19 lists: lists expressions
   20      | ε

   21 expressions: ',' expression

   22 body: BEGIN_ statement_ END ';'

   23 statement_: statement

   24 statement: expression ';'
   25          | WHEN condition ',' expression ':' expression ';'
   26          | SWITCH expression IS cases OTHERS ARROW statement ENDSWITCH ';'
   27          | IF condition THEN statement elsifs ELSE statement ENDIF ';'
   28          | FOLD direction operator list_choice ENDFOLD ';'
   29          | error ';'

   30 elsifs: elsifs elsif
   31       | ε

   32 elsif: ELSIF condition THEN statement

   33 cases: cases case
   34      | error ';'
   35      | ε

   36 case: CASE INT_LITERAL ARROW statement

   37 direction: LEFT
   38          | RIGHT

   39 operator: OROP
   40         | ANDOP
   41         | NOTOP
   42         | ADDOP
   43         | MULOP
   44         | MODOP
   45         | EXPOP
   46         | NEGOP

   47 list_choice: list
   48            | IDENTIFIER

   49 condition: condition2

   50 condition2: condition2 OROP condition3
   51           | condition3

   52 condition3: condition3 ANDOP condition4
   53           | condition4

   54 condition4: NOTOP conditions
   55           | conditions

   56 conditions: '(' condition2 ')'
   57           | expression RELOP expression

   58 expression: expression2

   59 expression2: expression2 ADDOP expression3
   60            | expression3

   61 expression3: expression3 MULOP expression4
   62            | expression3 MODOP expression4
   63            | expression4

   64 expression4: expression5
   65            | expression4 EXPOP expression5

   66 expression5: NEGOP primary
   67            | primary

   68 primary: '(' expression2 ')'
   69        | INT_LITERAL
   70        | REAL_LITERAL
   71        | CHAR_LITERAL
   72        | IDENTIFIER '(' expression2 ')'
   73        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 56 68 72
    ')' (41) 18 56 68 72
    ',' (44) 8 21 25
    ':' (58) 9 16 17 25
    ';' (59) 2 3 14 17 22 24 25 26 27 28 29 34
    error (256) 3 14 29 34
    IDENTIFIER (258) 2 9 16 17 48 72 73
    INT_LITERAL (259) 36 69
    CHAR_LITERAL (260) 71
    ADDOP (261) 42 59
    MULOP (262) 43 61
    ANDOP (263) 40 52
    RELOP (264) 57
    ARROW (265) 26 36
    BEGIN_ (266) 22
    CASE (267) 36
    CHARACTER (268) 12
    ELSE (269) 27
    END (270) 22
    ENDSWITCH (271) 26
    FUNCTION (272) 2
    INTEGER (273) 10
    IS (274) 16 17 26
    LIST (275) 17
    OF (276) 17
    OTHERS (277) 26
    RETURNS (278) 2
    SWITCH (279) 26
    WHEN (280) 25
    REAL (281) 11
    IF (282) 27
    THEN (283) 27 32
    ELSIF (284) 32
    ENDIF (285) 27
    FOLD (286) 28
    ENDFOLD (287) 28
    LEFT (288) 37
    RIGHT (289) 38
    NOTOP (290) 41 54
    OROP (291) 39 50
    NEGOP (292) 46 66
    REAL_LITERAL (293) 70
    MODOP (294) 44 62
    EXPOP (295) 45 65


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    function (47)
        on left: 1
        on right: 0
    function_header (48)
        on left: 2 3
        on right: 1
    parameters (49)
        on left: 4 5
        on right: 2
    optional_parameter (50)
        on left: 6 7
        on right: 4 6
    optional_parameters (51)
        on left: 8
        on right: 6
    parameter (52)
        on left: 9
        on right: 4 8
    type (53)
        on left: 10 11 12
        on right: 2 9 16 17
    variables (54)
        on left: 13 14 15
        on right: 1 13
    variable (55)
        on left: 16 17
        on right: 13
    list (56)
        on left: 18
        on right: 17 47
    lists (57)
        on left: 19 20
        on right: 18 19
    expressions (58)
        on left: 21
        on right: 19
    body (59)
        on left: 22
        on right: 1
    statement_ (60)
        on left: 23
        on right: 22
    statement (61)
        on left: 24 25 26 27 28 29
        on right: 16 23 26 27 32 36
    elsifs (62)
        on left: 30 31
        on right: 27 30
    elsif (63)
        on left: 32
        on right: 30
    cases (64)
        on left: 33 34 35
        on right: 26 33
    case (65)
        on left: 36
        on right: 33
    direction (66)
        on left: 37 38
        on right: 28
    operator (67)
        on left: 39 40 41 42 43 44 45 46
        on right: 28
    list_choice (68)
        on left: 47 48
        on right: 28
    condition (69)
        on left: 49
        on right: 25 27 32
    condition2 (70)
        on left: 50 51
        on right: 49 50 56
    condition3 (71)
        on left: 52 53
        on right: 50 51 52
    condition4 (72)
        on left: 54 55
        on right: 52 53
    conditions (73)
        on left: 56 57
        on right: 54 55
    expression (74)
        on left: 58
        on right: 18 21 24 25 26 57
    expression2 (75)
        on left: 59 60
        on right: 58 59 68 72
    expression3 (76)
        on left: 61 62 63
        on right: 59 60 61 62
    expression4 (77)
        on left: 64 65
        on right: 61 62 63 65
    expression5 (78)
        on left: 66 67
        on right: 64 65
    primary (79)
        on left: 68 69 70 71 72 73
        on right: 66 67


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • variables body

    error  shift, and go to state 8

    IDENTIFIER  reduce using rule 15 (variables)
    BEGIN_      reduce using rule 15 (variables)

    variables  go to state 9


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 5 (parameters)

    parameters  go to state 11
    parameter   go to state 12


State 7

    0 $accept: function $end •

    $default  accept


State 8

   14 variables: error • ';'

    ';'  shift, and go to state 13


State 9

    1 function: function_header variables • body
   13 variables: variables • variable

    IDENTIFIER  shift, and go to state 14
    BEGIN_      shift, and go to state 15

    variable  go to state 16
    body      go to state 17


State 10

    9 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 18


State 11

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 19


State 12

    4 parameters: parameter • optional_parameter

    $default  reduce using rule 7 (optional_parameter)

    optional_parameter  go to state 20


State 13

   14 variables: error ';' •

    $default  reduce using rule 14 (variables)


State 14

   16 variable: IDENTIFIER • ':' type IS statement
   17         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 21


State 15

   22 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement_   go to state 33
    statement    go to state 34
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 16

   13 variables: variables variable •

    $default  reduce using rule 13 (variables)


State 17

    1 function: function_header variables body •

    $default  reduce using rule 1 (function)


State 18

    9 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    REAL       shift, and go to state 43

    type  go to state 44


State 19

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    REAL       shift, and go to state 43

    type  go to state 45


State 20

    4 parameters: parameter optional_parameter •
    6 optional_parameter: optional_parameter • optional_parameters

    ','  shift, and go to state 46

    $default  reduce using rule 4 (parameters)

    optional_parameters  go to state 47


State 21

   16 variable: IDENTIFIER ':' • type IS statement
   17         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    LIST       shift, and go to state 48
    REAL       shift, and go to state 43

    type  go to state 49


State 22

   29 statement: error • ';'

    ';'  shift, and go to state 50


State 23

   72 primary: IDENTIFIER • '(' expression2 ')'
   73        | IDENTIFIER •

    '('  shift, and go to state 51

    $default  reduce using rule 73 (primary)


State 24

   69 primary: INT_LITERAL •

    $default  reduce using rule 69 (primary)


State 25

   71 primary: CHAR_LITERAL •

    $default  reduce using rule 71 (primary)


State 26

   26 statement: SWITCH • expression IS cases OTHERS ARROW statement ENDSWITCH ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression   go to state 52
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 27

   25 statement: WHEN • condition ',' expression ':' expression ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NOTOP         shift, and go to state 53
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    condition    go to state 55
    condition2   go to state 56
    condition3   go to state 57
    condition4   go to state 58
    conditions   go to state 59
    expression   go to state 60
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 28

   27 statement: IF • condition THEN statement elsifs ELSE statement ENDIF ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NOTOP         shift, and go to state 53
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    condition    go to state 61
    condition2   go to state 56
    condition3   go to state 57
    condition4   go to state 58
    conditions   go to state 59
    expression   go to state 60
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 29

   28 statement: FOLD • direction operator list_choice ENDFOLD ';'

    LEFT   shift, and go to state 62
    RIGHT  shift, and go to state 63

    direction  go to state 64


State 30

   66 expression5: NEGOP • primary

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    primary  go to state 65


State 31

   70 primary: REAL_LITERAL •

    $default  reduce using rule 70 (primary)


State 32

   68 primary: '(' • expression2 ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression2  go to state 66
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 33

   22 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 67


State 34

   23 statement_: statement •

    $default  reduce using rule 23 (statement_)


State 35

   24 statement: expression • ';'

    ';'  shift, and go to state 68


State 36

   58 expression: expression2 •
   59 expression2: expression2 • ADDOP expression3

    ADDOP  shift, and go to state 69

    $default  reduce using rule 58 (expression)


State 37

   60 expression2: expression3 •
   61 expression3: expression3 • MULOP expression4
   62            | expression3 • MODOP expression4

    MULOP  shift, and go to state 70
    MODOP  shift, and go to state 71

    $default  reduce using rule 60 (expression2)


State 38

   63 expression3: expression4 •
   65 expression4: expression4 • EXPOP expression5

    EXPOP  shift, and go to state 72

    $default  reduce using rule 63 (expression3)


State 39

   64 expression4: expression5 •

    $default  reduce using rule 64 (expression4)


State 40

   67 expression5: primary •

    $default  reduce using rule 67 (expression5)


State 41

   12 type: CHARACTER •

    $default  reduce using rule 12 (type)


State 42

   10 type: INTEGER •

    $default  reduce using rule 10 (type)


State 43

   11 type: REAL •

    $default  reduce using rule 11 (type)


State 44

    9 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 9 (parameter)


State 45

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 73


State 46

    8 optional_parameters: ',' • parameter

    IDENTIFIER  shift, and go to state 10

    parameter  go to state 74


State 47

    6 optional_parameter: optional_parameter optional_parameters •

    $default  reduce using rule 6 (optional_parameter)


State 48

   17 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 75


State 49

   16 variable: IDENTIFIER ':' type • IS statement

    IS  shift, and go to state 76


State 50

   29 statement: error ';' •

    $default  reduce using rule 29 (statement)


State 51

   72 primary: IDENTIFIER '(' • expression2 ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression2  go to state 77
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 52

   26 statement: SWITCH expression • IS cases OTHERS ARROW statement ENDSWITCH ';'

    IS  shift, and go to state 78


State 53

   54 condition4: NOTOP • conditions

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    conditions   go to state 79
    expression   go to state 60
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 54

   56 conditions: '(' • condition2 ')'
   68 primary: '(' • expression2 ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NOTOP         shift, and go to state 53
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    condition2   go to state 80
    condition3   go to state 57
    condition4   go to state 58
    conditions   go to state 59
    expression   go to state 60
    expression2  go to state 81
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 55

   25 statement: WHEN condition • ',' expression ':' expression ';'

    ','  shift, and go to state 82


State 56

   49 condition: condition2 •
   50 condition2: condition2 • OROP condition3

    OROP  shift, and go to state 83

    $default  reduce using rule 49 (condition)


State 57

   51 condition2: condition3 •
   52 condition3: condition3 • ANDOP condition4

    ANDOP  shift, and go to state 84

    $default  reduce using rule 51 (condition2)


State 58

   53 condition3: condition4 •

    $default  reduce using rule 53 (condition3)


State 59

   55 condition4: conditions •

    $default  reduce using rule 55 (condition4)


State 60

   57 conditions: expression • RELOP expression

    RELOP  shift, and go to state 85


State 61

   27 statement: IF condition • THEN statement elsifs ELSE statement ENDIF ';'

    THEN  shift, and go to state 86


State 62

   37 direction: LEFT •

    $default  reduce using rule 37 (direction)


State 63

   38 direction: RIGHT •

    $default  reduce using rule 38 (direction)


State 64

   28 statement: FOLD direction • operator list_choice ENDFOLD ';'

    ADDOP  shift, and go to state 87
    MULOP  shift, and go to state 88
    ANDOP  shift, and go to state 89
    NOTOP  shift, and go to state 90
    OROP   shift, and go to state 91
    NEGOP  shift, and go to state 92
    MODOP  shift, and go to state 93
    EXPOP  shift, and go to state 94

    operator  go to state 95


State 65

   66 expression5: NEGOP primary •

    $default  reduce using rule 66 (expression5)


State 66

   59 expression2: expression2 • ADDOP expression3
   68 primary: '(' expression2 • ')'

    ADDOP  shift, and go to state 69
    ')'    shift, and go to state 96


State 67

   22 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 97


State 68

   24 statement: expression ';' •

    $default  reduce using rule 24 (statement)


State 69

   59 expression2: expression2 ADDOP • expression3

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression3  go to state 98
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 70

   61 expression3: expression3 MULOP • expression4

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression4  go to state 99
    expression5  go to state 39
    primary      go to state 40


State 71

   62 expression3: expression3 MODOP • expression4

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression4  go to state 100
    expression5  go to state 39
    primary      go to state 40


State 72

   65 expression4: expression4 EXPOP • expression5

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression5  go to state 101
    primary      go to state 40


State 73

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 74

    8 optional_parameters: ',' parameter •

    $default  reduce using rule 8 (optional_parameters)


State 75

   17 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 41
    INTEGER    shift, and go to state 42
    REAL       shift, and go to state 43

    type  go to state 102


State 76

   16 variable: IDENTIFIER ':' type IS • statement

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement    go to state 103
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 77

   59 expression2: expression2 • ADDOP expression3
   72 primary: IDENTIFIER '(' expression2 • ')'

    ADDOP  shift, and go to state 69
    ')'    shift, and go to state 104


State 78

   26 statement: SWITCH expression IS • cases OTHERS ARROW statement ENDSWITCH ';'

    error  shift, and go to state 105

    CASE    reduce using rule 35 (cases)
    OTHERS  reduce using rule 35 (cases)

    cases  go to state 106


State 79

   54 condition4: NOTOP conditions •

    $default  reduce using rule 54 (condition4)


State 80

   50 condition2: condition2 • OROP condition3
   56 conditions: '(' condition2 • ')'

    OROP  shift, and go to state 83
    ')'   shift, and go to state 107


State 81

   58 expression: expression2 •
   59 expression2: expression2 • ADDOP expression3
   68 primary: '(' expression2 • ')'

    ADDOP  shift, and go to state 69
    ')'    shift, and go to state 96

    $default  reduce using rule 58 (expression)


State 82

   25 statement: WHEN condition ',' • expression ':' expression ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression   go to state 108
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 83

   50 condition2: condition2 OROP • condition3

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NOTOP         shift, and go to state 53
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    condition3   go to state 109
    condition4   go to state 58
    conditions   go to state 59
    expression   go to state 60
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 84

   52 condition3: condition3 ANDOP • condition4

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NOTOP         shift, and go to state 53
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    condition4   go to state 110
    conditions   go to state 59
    expression   go to state 60
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 85

   57 conditions: expression RELOP • expression

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression   go to state 111
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 86

   27 statement: IF condition THEN • statement elsifs ELSE statement ENDIF ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement    go to state 112
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 87

   42 operator: ADDOP •

    $default  reduce using rule 42 (operator)


State 88

   43 operator: MULOP •

    $default  reduce using rule 43 (operator)


State 89

   40 operator: ANDOP •

    $default  reduce using rule 40 (operator)


State 90

   41 operator: NOTOP •

    $default  reduce using rule 41 (operator)


State 91

   39 operator: OROP •

    $default  reduce using rule 39 (operator)


State 92

   46 operator: NEGOP •

    $default  reduce using rule 46 (operator)


State 93

   44 operator: MODOP •

    $default  reduce using rule 44 (operator)


State 94

   45 operator: EXPOP •

    $default  reduce using rule 45 (operator)


State 95

   28 statement: FOLD direction operator • list_choice ENDFOLD ';'

    IDENTIFIER  shift, and go to state 113
    '('         shift, and go to state 114

    list         go to state 115
    list_choice  go to state 116


State 96

   68 primary: '(' expression2 ')' •

    $default  reduce using rule 68 (primary)


State 97

   22 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 22 (body)


State 98

   59 expression2: expression2 ADDOP expression3 •
   61 expression3: expression3 • MULOP expression4
   62            | expression3 • MODOP expression4

    MULOP  shift, and go to state 70
    MODOP  shift, and go to state 71

    $default  reduce using rule 59 (expression2)


State 99

   61 expression3: expression3 MULOP expression4 •
   65 expression4: expression4 • EXPOP expression5

    EXPOP  shift, and go to state 72

    $default  reduce using rule 61 (expression3)


State 100

   62 expression3: expression3 MODOP expression4 •
   65 expression4: expression4 • EXPOP expression5

    EXPOP  shift, and go to state 72

    $default  reduce using rule 62 (expression3)


State 101

   65 expression4: expression4 EXPOP expression5 •

    $default  reduce using rule 65 (expression4)


State 102

   17 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 117


State 103

   16 variable: IDENTIFIER ':' type IS statement •

    $default  reduce using rule 16 (variable)


State 104

   72 primary: IDENTIFIER '(' expression2 ')' •

    $default  reduce using rule 72 (primary)


State 105

   34 cases: error • ';'

    ';'  shift, and go to state 118


State 106

   26 statement: SWITCH expression IS cases • OTHERS ARROW statement ENDSWITCH ';'
   33 cases: cases • case

    CASE    shift, and go to state 119
    OTHERS  shift, and go to state 120

    case  go to state 121


State 107

   56 conditions: '(' condition2 ')' •

    $default  reduce using rule 56 (conditions)


State 108

   25 statement: WHEN condition ',' expression • ':' expression ';'

    ':'  shift, and go to state 122


State 109

   50 condition2: condition2 OROP condition3 •
   52 condition3: condition3 • ANDOP condition4

    ANDOP  shift, and go to state 84

    $default  reduce using rule 50 (condition2)


State 110

   52 condition3: condition3 ANDOP condition4 •

    $default  reduce using rule 52 (condition3)


State 111

   57 conditions: expression RELOP expression •

    $default  reduce using rule 57 (conditions)


State 112

   27 statement: IF condition THEN statement • elsifs ELSE statement ENDIF ';'

    $default  reduce using rule 31 (elsifs)

    elsifs  go to state 123


State 113

   48 list_choice: IDENTIFIER •

    $default  reduce using rule 48 (list_choice)


State 114

   18 list: '(' • expression lists ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression   go to state 124
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 115

   47 list_choice: list •

    $default  reduce using rule 47 (list_choice)


State 116

   28 statement: FOLD direction operator list_choice • ENDFOLD ';'

    ENDFOLD  shift, and go to state 125


State 117

   17 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 114

    list  go to state 126


State 118

   34 cases: error ';' •

    $default  reduce using rule 34 (cases)


State 119

   36 case: CASE • INT_LITERAL ARROW statement

    INT_LITERAL  shift, and go to state 127


State 120

   26 statement: SWITCH expression IS cases OTHERS • ARROW statement ENDSWITCH ';'

    ARROW  shift, and go to state 128


State 121

   33 cases: cases case •

    $default  reduce using rule 33 (cases)


State 122

   25 statement: WHEN condition ',' expression ':' • expression ';'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression   go to state 129
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 123

   27 statement: IF condition THEN statement elsifs • ELSE statement ENDIF ';'
   30 elsifs: elsifs • elsif

    ELSE   shift, and go to state 130
    ELSIF  shift, and go to state 131

    elsif  go to state 132


State 124

   18 list: '(' expression • lists ')'

    $default  reduce using rule 20 (lists)

    lists  go to state 133


State 125

   28 statement: FOLD direction operator list_choice ENDFOLD • ';'

    ';'  shift, and go to state 134


State 126

   17 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 135


State 127

   36 case: CASE INT_LITERAL • ARROW statement

    ARROW  shift, and go to state 136


State 128

   26 statement: SWITCH expression IS cases OTHERS ARROW • statement ENDSWITCH ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement    go to state 137
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 129

   25 statement: WHEN condition ',' expression ':' expression • ';'

    ';'  shift, and go to state 138


State 130

   27 statement: IF condition THEN statement elsifs ELSE • statement ENDIF ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement    go to state 139
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 131

   32 elsif: ELSIF • condition THEN statement

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NOTOP         shift, and go to state 53
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 54

    condition    go to state 140
    condition2   go to state 56
    condition3   go to state 57
    condition4   go to state 58
    conditions   go to state 59
    expression   go to state 60
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 132

   30 elsifs: elsifs elsif •

    $default  reduce using rule 30 (elsifs)


State 133

   18 list: '(' expression lists • ')'
   19 lists: lists • expressions

    ','  shift, and go to state 141
    ')'  shift, and go to state 142

    expressions  go to state 143


State 134

   28 statement: FOLD direction operator list_choice ENDFOLD ';' •

    $default  reduce using rule 28 (statement)


State 135

   17 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 17 (variable)


State 136

   36 case: CASE INT_LITERAL ARROW • statement

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement    go to state 144
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 137

   26 statement: SWITCH expression IS cases OTHERS ARROW statement • ENDSWITCH ';'

    ENDSWITCH  shift, and go to state 145


State 138

   25 statement: WHEN condition ',' expression ':' expression ';' •

    $default  reduce using rule 25 (statement)


State 139

   27 statement: IF condition THEN statement elsifs ELSE statement • ENDIF ';'

    ENDIF  shift, and go to state 146


State 140

   32 elsif: ELSIF condition • THEN statement

    THEN  shift, and go to state 147


State 141

   21 expressions: ',' • expression

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    expression   go to state 148
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 142

   18 list: '(' expression lists ')' •

    $default  reduce using rule 18 (list)


State 143

   19 lists: lists expressions •

    $default  reduce using rule 19 (lists)


State 144

   36 case: CASE INT_LITERAL ARROW statement •

    $default  reduce using rule 36 (case)


State 145

   26 statement: SWITCH expression IS cases OTHERS ARROW statement ENDSWITCH • ';'

    ';'  shift, and go to state 149


State 146

   27 statement: IF condition THEN statement elsifs ELSE statement ENDIF • ';'

    ';'  shift, and go to state 150


State 147

   32 elsif: ELSIF condition THEN • statement

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    CHAR_LITERAL  shift, and go to state 25
    SWITCH        shift, and go to state 26
    WHEN          shift, and go to state 27
    IF            shift, and go to state 28
    FOLD          shift, and go to state 29
    NEGOP         shift, and go to state 30
    REAL_LITERAL  shift, and go to state 31
    '('           shift, and go to state 32

    statement    go to state 151
    expression   go to state 35
    expression2  go to state 36
    expression3  go to state 37
    expression4  go to state 38
    expression5  go to state 39
    primary      go to state 40


State 148

   21 expressions: ',' expression •

    $default  reduce using rule 21 (expressions)


State 149

   26 statement: SWITCH expression IS cases OTHERS ARROW statement ENDSWITCH ';' •

    $default  reduce using rule 26 (statement)


State 150

   27 statement: IF condition THEN statement elsifs ELSE statement ENDIF ';' •

    $default  reduce using rule 27 (statement)


State 151

   32 elsif: ELSIF condition THEN statement •

    $default  reduce using rule 32 (elsif)
